import org.apache.tools.ant.filters.ReplaceTokens

// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'idea'

/*
// for people who want stable - not yet functional for MC 1.8.8 - we require the forgegradle 2.1 snapshot
plugins {
    id "net.minecraftforge.gradle.forge" version "2.0.2"
}
*/
version = "1.0"
group= "eu.beezig.forge" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "BeezigForge"

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

jar {
    archiveName = "BeezigForge.jar"
    manifest {
        attributes("FMLCorePlugin": "eu.beezig.forge.asm.BeezigForgeCorePlugin",
                "FMLCorePluginContainsFMLMod": "eu.beezig.forge.BeezigForgeMod")
    }
}


minecraft {
    version = "1.8.9-11.15.1.1722"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "stable_20"
    makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    // Update the version.json
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.json'
        filesMatching('**/*.json') {
            def beezigForgeCommit = "git rev-parse HEAD".execute().text.trim()
            def beezigForgeCommits = ("git rev-list --count " + "git log --tags -1 --pretty=%H".execute().text.trim() +
                    "..HEAD").execute().text.trim()
            def beezigForgeDate = ("git log -1 --pretty=%cI " + beezigForgeCommit).execute().text.trim()

            filter(ReplaceTokens, tokens: [beezigforgeversion: '7.0.0',
                                           beezigforgecommit: beezigForgeCommit,
                                           beezigforgecommits: beezigForgeCommits,
                                           beezigforgetype: 'beta',
                                           beezigforgedate: beezigForgeDate])
        }
    }
}
